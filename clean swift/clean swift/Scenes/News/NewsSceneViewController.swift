//
//  NewsSceneViewController.swift
//  clean swift
//
//  Created by Felix F on 5/2/20.
//  Copyright (c) 2020 Pedro Ledezma. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol NewsSceneDisplayLogic: class
{
  func displaySomething(viewModel: NewsScene.Something.ViewModel)
}

class NewsSceneViewController: UIViewController, NewsSceneDisplayLogic
{
    @IBOutlet weak var tableView: UITableView!
    var interactor: NewsSceneBusinessLogic?
  var router: (NSObjectProtocol & NewsSceneRoutingLogic & NewsSceneDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  func addNewsNavigationButton(){
      let addNavigationButton = UIBarButtonItem(barButtonSystemItem: .add, target: self, action: #selector(addNewsAction(sender:)))
      navigationItem.rightBarButtonItem = addNavigationButton
  }
  @objc func addNewsAction(sender:UIBarButtonItem){
      print("hola hola")
       
  }
    func registerCustomCell() {
        let nib = UINib(nibName: "NewsTableViewCell", bundle: nil)
        tableView.register(nib, forCellReuseIdentifier: "NewsTableViewCell")
    }
   
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = NewsSceneInteractor()
    let presenter = NewsScenePresenter()
    let router = NewsSceneRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    registerCustomCell()
    addNewsNavigationButton()
  }
  
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
  
  func doSomething()
  {
    let request = NewsScene.Something.Request()
    interactor?.doSomething(request: request)
  }
  
  func displaySomething(viewModel: NewsScene.Something.ViewModel)
  {
    //nameTextField.text = viewModel.name
  }
}

extension NewsSceneViewController:UITableViewDelegate,UITableViewDataSource{
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> guard let cell = tableView.dequeueReusableCell(withIdentifier: "NewsTableViewCell") as? NewsTableViewCell else {
        return UITableViewCell()
    }
    if let new = category?.news[indexPath.row]{
        cell.setupCell(news: new)
    }
    return cell
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 0
    }
     
    
}
